version: '3.7'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2024-01-13T07-53-03Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 5s
    timeout: 5s


services:
  db:
    image: mariadb:latest
    hostname: db
    container_name: odisk_db
    restart: always
    ports:
      - "13306:3306"
    volumes:
      - ./db/data:/var/lib/mysql
    environment:
      MARIADB_MYSQL_LOCALHOST_USER: 1
      MYSQL_ROOT_PASSWORD: 'FTVGBUY7uvib89Y'
      MYSQL_DATABASE: 'odisk'
      MYSQL_USER: 'odisk'
      MYSQL_PASSWORD: 'FTVGBUY7uvib89Y'
      MYSQL_CHARSET: 'utf8mb4'
      MYSQL_COLLATION: 'utf8mb4_general_ci'
      # MYSQL_HOST: '%'

  adminer:
    image: adminer:latest
    hostname: adminer
    container_name: odisk_adminer
    restart: always
    ports:
      - "28080:8080"
    depends_on:
      - db
  
  redis:
    image: redis:latest
    hostname: redis
    container_name: odisk_redis
    restart: always
    command: redis-server --requirepass TGVG8791HUBH --appendonly yes --bind 0.0.0.0
    ports:  
      - "16379:6379"

  nginx:
    image: nginx
    hostname: nginx
    container_name: odisk_nginx
    ports:
      - "8080:80"
    volumes:
      - ./static:/usr/share/nginx/html:ro
    restart: always
    depends_on:
      - db 
      - redis
      - haproxy1
  
  haproxy1:
    image: haproxy:alpine
    hostname: haproxy1
    container_name: odisk_haproxy1
    ports:
      - "18080:8080"
      - "19000:9000"
      - "19001:9001"
    restart: always
    volumes:
      - ./config/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    command: haproxy -f /usr/local/etc/haproxy/haproxy.cfg

    depends_on:
      minio1:
        condition: service_healthy
      minio2:
        condition: service_healthy
      minio3:
        condition: service_healthy
      minio4:
        condition: service_healthy

  # haproxy2:
  #   image: haproxy:alpine
  #   container_name: haproxy_container1
  #   ports:
  #     - "18080:8080"
  #     - "19000:9000"
  #     - "19001:9001"
  #   restart: always
  #   volumes:
  #     - ./config/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
  #   privileged: true
  #   command: haproxy -c -f /usr/local/etc/haproxy/haproxy.cfg
  
  minio1:
    <<: *minio-common
    hostname: minio1
    container_name: odisk_minio1
    volumes:
      - ./minio/data1-1:/data1
      - ./minio/data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    container_name: odisk_minio2
    volumes:
      - ./minio/data2-1:/data1
      - ./minio/data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    container_name: odisk_minio3
    volumes:
      - ./minio/data3-1:/data1
      - ./minio/data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    container_name: odisk_minio4
    volumes:
      - ./minio/data4-1:/data1
      - ./minio/data4-2:/data2


