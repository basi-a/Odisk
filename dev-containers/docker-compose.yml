version: '3.8'

# Settings and configurations that are common for all containers
x-hosts-common: &hosts-common
  extra_hosts:
      - "mariadb:172.40.20.10"
      - "adminer:172.40.20.11"
      - "redis:172.40.20.12"
      - "nginx:172.40.20.13"
      - "keepalived.haproxy1:172.40.20.14"
      - "keepalived.haproxy2:172.40.20.15"
      - "minio1:172.40.20.16"
      - "minio2:172.40.20.17"
      - "minio3:172.40.20.18"
      - "minio4:172.40.20.19"
      - "server1:172.40.20.20"
      - "server2:172.40.20.21"
      - "server3:172.40.20.22"
      - "server4:172.40.20.23"
      - "keepalived.vip:172.40.20.100"

x-minio-common: &minio-common
  <<: *hosts-common
  image: quay.io/minio/minio:RELEASE.2024-01-13T07-53-03Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
    MINIO_REGION_NAME: zh-private-1
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 10s
    retries: 10
    timeout: 5s

x-keepalived-haproxy-common: &keepalived-haproxy-common
  <<: *hosts-common
  build:
    context: ./haproxy-keepalived/.
  image: odisk/keepalived-haproxy:latest
  depends_on: 
    minio1:
      condition: service_healthy
    minio2:
      condition: service_healthy
    minio3:
      condition: service_healthy
    minio4:
      condition: service_healthy
    # server1:
    #   condition: service_healthy
    # server2:
    #   condition: service_healthy
    # server3:
    #   condition: service_healthy
    # server4:
    #   condition: service_healthy
  command: /sbin/init
  privileged: true  

x-server-common: &server-common
  <<: *hosts-common
  build:
    context: ./server/.
  image: odisk/server:latest
  volumes:
    - ./server/config/config.yaml:/etc/odisk/config.yaml
    - ./log/odisk:/var/log/odisk
  expose: 
    - "7000"
  command: /opt/odisk
  healthcheck:
    test: ["CMD", "curl", "-k","-f", "https://localhost:7000/ping"]
    interval: 1m
    retries: 10
    timeout: 5s
  depends_on:
    minio1:
      condition: service_healthy
    minio2:
      condition: service_healthy
    minio3:
      condition: service_healthy
    minio4:
      condition: service_healthy
    mariadb:
      condition: service_healthy
    redis:
      condition: service_healthy
services:
  mariadb:
    <<: *hosts-common
    image: mariadb:latest
    hostname: mariadb
    container_name: odisk_mariadb
    restart: always
    ports:
      - "13306:3306"
    volumes:
      - ./db/data:/var/lib/mysql
    environment:
      MARIADB_MYSQL_LOCALHOST_USER: 1
      MYSQL_ROOT_PASSWORD: 'FTVGBUY7uvib89Y'
      MYSQL_DATABASE: 'odisk'
      MYSQL_USER: 'odisk'
      MYSQL_PASSWORD: 'FTVGBUY7uvib89Y'
      MYSQL_CHARSET: 'utf8mb4'
      MYSQL_COLLATION: 'utf8mb4_general_ci'
      MYSQL_HOST: '%'
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--connect"]
      interval: 5s
      retries: 5
      timeout: 5s
    networks: 
      app-network:
        ipv4_address: 172.40.20.10
      
  adminer:
    <<: *hosts-common
    image: adminer:latest
    hostname: adminer
    container_name: odisk_adminer
    restart: always
    ports:
      - "28080:8080"
    depends_on:
      mariadb:
        condition: service_healthy
    networks: 
      app-network:
        ipv4_address: 172.40.20.11

  redis:
    <<: *hosts-common
    image: redis:latest
    hostname: redis
    container_name: odisk_redis
    restart: always
    command: redis-server --requirepass TGVG8791HUBH --appendonly yes --bind 0.0.0.0
    ports:  
      - "16379:6379"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      retries: 10
      timeout: 5s
    networks: 
      app-network:
        ipv4_address: 172.40.20.12

  nginx:
    <<: *hosts-common
    image: nginx
    hostname: nginx
    container_name: odisk_nginx
    ports:
      - "8080:80"
    volumes:
      - ./static:/usr/share/nginx/html:ro
    restart: always
    depends_on:
      - mariadb 
      - redis
      - keepalived_haproxy1
      - keepalived_haproxy2
    networks: 
      app-network:
        ipv4_address: 172.40.20.13

  keepalived_haproxy1:
    <<: *keepalived-haproxy-common
    container_name: odisk_keepalived_haproxy1
    volumes:
      - ./haproxy-keepalived/config/keepalived1.conf:/etc/keepalived/keepalived.conf
      - ./haproxy-keepalived/config/haproxy.cfg:/etc/haproxy/haproxy.cfg
    networks: 
      app-network:
        ipv4_address: 172.40.20.14

  keepalived_haproxy2:
    <<: *keepalived-haproxy-common
    container_name: odisk_keepalived_haproxy2
    volumes:
      - ./haproxy-keepalived/config/keepalived2.conf:/etc/keepalived/keepalived.conf
      - ./haproxy-keepalived/config/haproxy.cfg:/etc/haproxy/haproxy.cfg
    networks: 
      app-network:
        ipv4_address: 172.40.20.15

  minio1:
    <<: *minio-common
    hostname: minio1
    container_name: odisk_minio1
    volumes:
      - ./minio/data1-1:/data1
      - ./minio/data1-2:/data2
    networks: 
      app-network:
        ipv4_address: 172.40.20.16
  minio2:
    <<: *minio-common
    hostname: minio2
    container_name: odisk_minio2
    volumes:
      - ./minio/data2-1:/data1
      - ./minio/data2-2:/data2
    networks: 
      app-network:
        ipv4_address: 172.40.20.17
  minio3:
    <<: *minio-common
    hostname: minio3
    container_name: odisk_minio3
    volumes:
      - ./minio/data3-1:/data1
      - ./minio/data3-2:/data2
    networks: 
      app-network:
        ipv4_address: 172.40.20.18
  minio4:
    <<: *minio-common
    hostname: minio4
    container_name: odisk_minio4
    volumes:
      - ./minio/data4-1:/data1
      - ./minio/data4-2:/data2
    networks: 
      app-network:
        ipv4_address: 172.40.20.19

  server1:
    <<: *server-common
    hostname: server1
    container_name: odisk_server1
    networks: 
      app-network:
        ipv4_address: 172.40.20.20
  server2:
    <<: *server-common
    hostname: server2
    container_name: odisk_server2
    networks: 
      app-network:
        ipv4_address: 172.40.20.21
  server3:
    <<: *server-common
    hostname: server3
    container_name: odisk_server3
    networks: 
      app-network:
        ipv4_address: 172.40.20.22
  server4:
    <<: *server-common
    hostname: server4
    container_name: odisk_server4
    networks: 
      app-network:
        ipv4_address: 172.40.20.23

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.40.20.0/24
          gateway: 172.40.20.1
