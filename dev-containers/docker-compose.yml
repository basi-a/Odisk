version: '3.8'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2024-01-13T07-53-03Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 5s
    timeout: 5s


services:
  mariadb:
    image: mariadb:latest
    hostname: mariadb
    container_name: odisk_mariadb
    restart: always
    ports:
      - "13306:3306"
    volumes:
      - ./db/data:/var/lib/mysql
      - ./hosts:/etc/hosts
    environment:
      MARIADB_MYSQL_LOCALHOST_USER: 1
      MYSQL_ROOT_PASSWORD: 'FTVGBUY7uvib89Y'
      MYSQL_DATABASE: 'odisk'
      MYSQL_USER: 'odisk'
      MYSQL_PASSWORD: 'FTVGBUY7uvib89Y'
      MYSQL_CHARSET: 'utf8mb4'
      MYSQL_COLLATION: 'utf8mb4_general_ci'
      # MYSQL_HOST: '%'
    networks: 
      app-network:
        ipv4_address: 172.40.20.10

  adminer:
    image: adminer:latest
    hostname: adminer
    container_name: odisk_adminer
    restart: always
    ports:
      - "28080:8080"
    volumes:
      - ./hosts:/etc/hosts
    depends_on:
      - mariadb
    networks: 
      app-network:
        ipv4_address: 172.40.20.11

  redis:
    image: redis:latest
    hostname: redis
    container_name: odisk_redis
    restart: always
    command: redis-server --requirepass TGVG8791HUBH --appendonly yes --bind 0.0.0.0
    ports:  
      - "16379:6379"
    volumes:
      - ./hosts:/etc/hosts
    networks: 
      app-network:
        ipv4_address: 172.40.20.12

  nginx:
    image: nginx
    hostname: nginx
    container_name: odisk_nginx
    ports:
      - "8080:80"
    volumes:
      - ./static:/usr/share/nginx/html:ro
      - ./hosts:/etc/hosts
    restart: always
    depends_on:
      - mariadb 
      - redis
    networks: 
      app-network:
        ipv4_address: 172.40.20.13

  keepalived_haproxy1:
    build:
      context: ./haproxy-keepalived/.
    container_name: odisk_keepalived_haproxy1
    volumes:
      - ./haproxy-keepalived/config/haproxy.cfg:/etc/haproxy/haproxy.cfg
      - ./haproxy-keepalived/config/keepalived1.conf:/etc/keepalived/keepalived.conf
      - ./hosts:/etc/hosts
    networks: 
      app-network:
        ipv4_address: 172.40.20.14
    command: /sbin/init
    privileged: true
  keepalived_haproxy2:
    build:
      context: ./haproxy-keepalived/.
    container_name: odisk_keepalived_haproxy2
    volumes:
      - ./haproxy-keepalived/config/haproxy.cfg:/etc/haproxy/haproxy.cfg
      - ./haproxy-keepalived/config/keepalived2.conf:/etc/keepalived/keepalived.conf
      - ./hosts:/etc/hosts
    networks: 
      app-network:
        ipv4_address: 172.40.20.15
    command: /sbin/init
    depends_on:
      - keepalived_haproxy1
    privileged: true


  minio1:
    <<: *minio-common
    hostname: minio1
    container_name: odisk_minio1
    volumes:
      - ./minio/data1-1:/data1
      - ./minio/data1-2:/data2
      - ./hosts:/etc/hosts
    networks: 
      app-network:
        ipv4_address: 172.40.20.16
  minio2:
    <<: *minio-common
    hostname: minio2
    container_name: odisk_minio2
    volumes:
      - ./minio/data2-1:/data1
      - ./minio/data2-2:/data2
      - ./hosts:/etc/hosts
    networks: 
      app-network:
        ipv4_address: 172.40.20.17
  minio3:
    <<: *minio-common
    hostname: minio3
    container_name: odisk_minio3
    volumes:
      - ./minio/data3-1:/data1
      - ./minio/data3-2:/data2
      - ./hosts:/etc/hosts
    networks: 
      app-network:
        ipv4_address: 172.40.20.18
  minio4:
    <<: *minio-common
    hostname: minio4
    container_name: odisk_minio4
    volumes:
      - ./minio/data4-1:/data1
      - ./minio/data4-2:/data2
      - ./hosts:/etc/hosts
    networks: 
      app-network:
        ipv4_address: 172.40.20.19

        
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.40.20.0/24
          gateway: 172.40.20.1
